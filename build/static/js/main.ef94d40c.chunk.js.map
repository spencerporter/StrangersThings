{"version":3,"sources":["constants.js","api/index.js","components/NavBar.js","components/Posts.js","components/Home.js","components/Profile.js","components/LogIn.js","components/AddEditPost.js","components/Post.js","index.js"],"names":["BASE_URL","fetchPosts","a","fetch","response","json","result","posts","data","console","error","fetchPostsWithToken","token","method","headers","postID","setPost","forEach","post","_id","setTitle","setDescription","setPrice","setLocation","setWillDeliver","title","description","price","location","willDeliver","postMessage","message","body","JSON","stringify","content","then","catch","deletePostWithID","login","username","password","user","register","getUser","setUser","localStorage","setItem","NavBar","setToken","className","href","id","aria-current","to","onClick","event","removeItem","getPosts","setPosts","setDisplayPosts","setShowDeleteAlert","setShowCommentAlert","Posts","useState","comments","setComments","displayPosts","showCommentAlert","showDeleteAlert","history","useHistory","useEffect","ToastContainer","position","Toast","bg","onClose","Header","src","alt","Body","type","placeholder","aria-label","onChange","value","target","filteredPosts","filter","text","toLowerCase","includes","author","postMatches","postsToDisplay","length","map","index","key","isAuthor","deletePost","push","onSubmit","preventDefault","sendMessage","htmlFor","rows","newComments","Home","Profile","messages","fromUser","success","document","getElementById","innerHTML","confirmPassword","LogIn","match","setUsername","setPassword","setConfirmPassword","url","registerUser","loginUser","minLength","postId","AddEditPost","isAdd","params","getPostWithIDForEdit","addPost","editPost","Post","getPostWithID","App","getItem","exact","path","render","routeProps","ReactDOM"],"mappings":"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","file":"static/js/main.ef94d40c.chunk.js","sourcesContent":["export const BASE_URL = 'https://strangers-things.herokuapp.com/api/2107-CSU-RM-WEB-PT/';","/**\n * API Calls\n */\nimport { BASE_URL } from \"../constants\";\n\n\n/**\n * Post Functions\n */\nexport async function fetchPosts() {\n    try {\n        const response = await fetch(`${BASE_URL}/posts`)\n        const result = await response.json();\n        const posts = result.data.posts;\n        return posts;\n    } catch (error) {\n        console.error(\"Error retriving Posts\", error);\n    }\n}\n\nexport async function fetchPostsWithToken(token) {\n    try{\n        const response = await fetch(`${BASE_URL}/posts`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        const result = await response.json();\n        const posts = result.data.posts;\n        return posts;\n    }catch (error){\n        console.error(\"Isssue Fetching Users Posts\", error)\n    }\n}\nexport async function getPostWithID(token, postID, setPost){\n    try{\n        const response = await fetch(`${BASE_URL}/posts`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        const result = await response.json();\n        const posts = result.data.posts;\n\n        posts.forEach((post) => {\n            if(post._id === postID) {\n                setPost(post);\n            }\n        })\n    }catch (error){\n        console.error(\"Isssue Fetching Users Posts\", error)\n    }\n}\n\nexport async function getPostWithIDForEdit(token, postID, setTitle, setDescription, setPrice, setLocation, setWillDeliver){\n    try{\n        const response = await fetch(`${BASE_URL}/posts`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        const result = await response.json();\n        const posts = result.data.posts;\n\n        posts.forEach((post) => {\n            if(post._id === postID) {\n                setTitle(post.title);\n                setDescription(post.description);\n                setPrice(post.price);\n                setLocation(post.location);\n                setWillDeliver(post.willDeliver);\n            }\n        })\n    }catch (error){\n        console.error(\"Isssue Fetching Users Posts\", error)\n    }\n}\n\nexport async function postMessage(message, postID, token){\n    fetch(`${BASE_URL}/posts/${postID}/messages`, {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n            message: {\n            content: message\n        }\n    })\n    }).then(response => response.json())\n    .catch(console.error);\n}\n\nexport async function deletePostWithID (token, postID){\n    try{\n        const response = await fetch(`${BASE_URL}/posts/${postID}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        const result = await response.json();\n        return result;\n    }catch (error){\n        console.error(\"Isssue Fetching Users Posts\", error)\n    }\n}\n\n/**\n * User Functions\n */\n\nexport async function login(username, password){\n    try {\n        const response = await fetch(`${BASE_URL}/users/login`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: {\n                    username: username,\n                    password: password\n                }\n            })\n        })\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        console.error(\"Error retriving Posts\", error);\n    }\n}\n\nexport async function register(username, password){\n    try {\n        const response = await fetch(`${BASE_URL}/users/register`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: {\n                    username: username,\n                    password: password\n                }\n            })\n        })\n        const result = await response.json();\n        return result;\n    } catch (error) {\n        console.error(\"Error retriving Posts\", error);\n    }\n}\n\nexport async function getUser(token, setUser){\n    fetch(`${BASE_URL}/users/me`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n      })\n    .then(response => response.json())\n    .then(result => {\n        setUser(result.data)\n        localStorage.setItem(\"user\", result.data);\n    })\n    .catch(console.error);\n}","import React from \"react\";\nimport { Link} from 'react-router-dom';\n\nconst NavBar = ({token, setToken}) => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n            <div className=\"d-flex justify-content-between p-3\">\n                <a className=\"navbar-brand fs-2\" href=\"/\">Stranger's Things</a>\n\n                <div className=\"collapse navbar-collapse fs-3\" id=\"navbarNavAltMarkup\">\n                    <div className=\"navbar-nav\">\n                        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n                        <Link className=\"nav-link active\" to=\"/posts\">Posts</Link>\n                        <Link className=\"nav-link active\" to=\"/profile\">Profile</Link>\n                        {(!token ? <Link className=\"nav-link active\" to=\"/login\">Log In</Link> : \n                            <Link className=\"nav-link active\" to=\"/login\" onClick={(event) => {\n                                localStorage.removeItem(\"token\");\n                                setToken(\"\");\n                        }}>Log Out</Link>)}\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar;","import React, { useEffect, useState }from \"react\";\nimport { Link , useHistory } from \"react-router-dom\";\nimport { fetchPosts , fetchPostsWithToken , deletePostWithID, postMessage } from \"../api\";\nimport { Toast, ToastContainer } from \"react-bootstrap\";\n\nasync function getPosts(token, setPosts, setDisplayPosts){\n    if(token){\n        const posts = await fetchPostsWithToken(token)\n        setPosts(posts);\n        setDisplayPosts(posts);\n    }else{\n        const posts = await fetchPosts();\n        setPosts(posts);\n        setDisplayPosts(posts);\n    }\n}\n\nasync function deletePost(postID, token, setPosts, setDisplayPosts, setShowDeleteAlert){\n    await deletePostWithID(token, postID)\n    getPosts(token,setPosts, setDisplayPosts);\n    setShowDeleteAlert(true);\n}\n\nasync function sendMessage(message, postID, token, setPosts, setDisplayPosts, setShowCommentAlert){\n    await postMessage(message,postID,token);\n    getPosts(token, setPosts, setDisplayPosts);\n    setShowCommentAlert(true);\n}\n\n\nfunction postMatches(post, text) {\n    if(post.description.toLowerCase().includes(text)) return true;\n    if(post.author.username.toLowerCase().includes(text)) return true;\n    if(post.location.toLowerCase().includes(text)) return true;\n    if(post.price.toLowerCase().includes(text)) return true;\n    if(post.title.toLowerCase().includes(text)) return true;\n\n    return false;\n}\n\nconst Posts = ({token}) => {\n    const [posts, setPosts] = useState([]);\n    const [comments, setComments] = useState({});\n    const [displayPosts, setDisplayPosts] = useState([]);\n    const [showCommentAlert, setShowCommentAlert] = useState(false);\n    const [showDeleteAlert, setShowDeleteAlert] = useState(false);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        getPosts(token, setPosts, setDisplayPosts);\n    }, [token]);\n\n    return (\n        <div id=\"posts\" className=\"centered w-75\">\n            {(showCommentAlert ? \n                <ToastContainer className=\"pos-fix p-3\" position=\"top-end\">\n                    <Toast className=\"d-inline-block m-1\" bg=\"Light\" onClose={() => setShowCommentAlert(false)}>\n                        <Toast.Header>\n                            <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\n                            <strong className=\"me-auto\">Message Sent</strong>\n                        </Toast.Header>\n                        <Toast.Body >\n                            Your Message has been sent!\n                        </Toast.Body>\n                    </Toast>\n                </ToastContainer>\n            : null)}\n            {(showDeleteAlert ? \n                <ToastContainer className=\"pos-fix p-3\" position=\"top-end\">\n                    <Toast className=\"d-inline-block m-1\" bg=\"Light\" onClose={() => setShowDeleteAlert(false)}>\n                        <Toast.Header>\n                            <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\n                            <strong className=\"me-auto\">Post Deleted</strong>\n                        </Toast.Header>\n                        <Toast.Body >\n                            Your Message has been sent!\n                        </Toast.Body>\n                    </Toast>\n                </ToastContainer>\n            : null)}\n            <div className=\"horizGroup\">\n                <form className=\"d-flex w-75\">\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search Posts\" aria-label=\"Search\"\n                    onChange={({target : {value}}) => {\n                        const filteredPosts = posts.filter(post => postMatches(post, value.toLowerCase()));\n                        const postsToDisplay = value.length ? filteredPosts : posts;\n                        setDisplayPosts(postsToDisplay)\n                    }}/>\n                </form>\n\n                {(token !== \"\" ? <Link className=\"btn btn-outline-primary m-3\" to=\"/posts/add\">Add a Post</Link> : null)}\n            </div>\n            {displayPosts.map((post, index) => {\n                return (\n                    <div key={index} className=\"card w-75 p-3 border-dark m-3 shadow bg-body rounded\">\n                        <div className=\"card-header bg-primary text-white\">\n                            {post.title}\n                        </div>\n                        <ul className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item\">Description: {post.description}</li>\n                            <li className=\"list-group-item\">Author: {post.author.username}</li>\n                            <li className=\"list-group-item\">Location: {post.location}</li>\n                            <li className=\"list-group-item\">Price: {post.price}</li>\n                            {post.willDeliver ? <li className=\"list-group-item\">Will Deliver</li> : <li className=\"list-group-item\">Will NOT Deliver</li>}\n                            {post.isAuthor ? \n                                <div className=\"horizGroup\">\n                                    <button type=\"button\" className=\"btn btn-outline-danger w-25 m-3\" onClick={() => {deletePost(post._id,token,setPosts, setDisplayPosts, setShowDeleteAlert)}}>Delete</button>\n                                    <button type=\"button\" className=\"btn btn-outline-primary w-25 m-3\" \n                                    onClick={() => {history.push(`/posts/post/${post._id}`)}}>View Post</button>\n                                </div>\n                            :\n                            <form onSubmit={(event) => {\n                                event.preventDefault();\n                                const message = comments[post._id];\n                                sendMessage(message,post._id,token, setPosts, setDisplayPosts,setShowCommentAlert);\n                                comments[post._id] = \"\"\n                            }}>\n                                <div className=\"m-3\">\n                                    <label htmlFor=\"messageTextArea\" className=\"form-label\">Message the Author</label>\n                                    <textarea className=\"form-control\" id=\"messageTextArea\" rows=\"3\" value={comments[post._id]} onChange={({target : {value}}) => {\n                                        let newComments = comments;\n                                        newComments[post._id] = value;\n                                        setComments(newComments);\n                                    }}></textarea>\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-outline-primary w-25 m-3\">Send Message</button>\n                            </form>\n                            }\n                        </ul>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Posts;","import React , {useEffect , useState} from \"react\";\nimport { useHistory } from \"react-router\";\nimport { getUser } from \"../api\";\n\nconst Home = ({token}) => {\n    const history = useHistory();\n\n    const [user, setUser] = useState({});\n    \n    useEffect(() => {\n        if(token){\n            getUser(token, setUser);\n        }\n    }, [token])\n\n    if(token){\n        return (\n            <div className=\"centered m-3\">\n                <h1> Welcome: {user.username} </h1>\n                <h2> Logged in as {user.username}</h2>\n                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={(event) =>{\n                    event.preventDefault();\n                    history.push(\"/profile\");\n                }}>View Profile</button>\n            </div>          \n        )\n    }else{\n        return (<div className=\"centered m-3\">\n            <h1>Welcome: Please Login to view Profile</h1>\n            <button type=\"button\" className=\"btn btn-outline-primary\" onClick={(event) =>{\n                    event.preventDefault();\n                    history.push(\"/login\");\n                }}>Log In</button>\n        </div>)\n    }\n}\n\nexport default Home;","import React, {useState, useEffect} from \"react\";\n\nimport { getUser } from \"../api\";\n\nconst Profile = ({token, history}) => {\n    const [user, setUser] = useState({});\n    \n    useEffect(() => {\n        if(token){\n            getUser(token, setUser);\n        }\n    }, [token])\n\n    if(user.username){\n        return (\n            <div className=\"centered\">\n                <h1> Welcome: {user.username} </h1> \n                <h2> Messages to Me: </h2>\n                {\n                    user.messages.map((message, index) => {\n                        if(message.fromUser._id !== user._id){\n                            return(\n                                <div key={index} className=\"card w-75 p-3 border-dark m-3 shadow bg-body rounded\">\n                                    <ul className=\"list-group list-group-flush\">\n                                        <li className=\"list-group-item\"><h3>Post: {message.post.title}</h3></li>\n                                        <li className=\"list-group-item\">From: {message.fromUser.username}</li>\n                                        <li className=\"list-group-item\">Message: {message.content}</li>\n                                    </ul>\n                                </div>\n                            )\n                        }\n                        return null;\n                    })\n                }\n                <h2> Messages from Me: </h2>\n                {\n                    user.messages.map((message, index) => {\n                        if(message.fromUser._id === user._id){\n                            return(\n                                <div key={index} className=\"card w-75 p-3 border-dark m-3 shadow bg-body rounded\">\n                                    <ul className=\"list-group list-group-flush\">\n                                        <li className=\"list-group-item\"><h3>Post: {message.post.title}</h3></li>\n                                        <li className=\"list-group-item\">From: {message.fromUser.username}</li>\n                                        <li className=\"list-group-item\">Message: {message.content}</li>\n                                    </ul>\n                                </div>\n                            )\n                        }\n                        return null;\n                    })\n                }\n            </div>\n        )\n    }else{\n        return (\n            <div className=\"centered m-3\">\n                <h1>Please Login to see your Profile</h1>\n                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={(event) =>{\n                    event.preventDefault();\n                    history.push(\"/login\");\n                }}>Log In</button>\n            </div>);\n    }\n}\n\nexport default Profile;","import React, {useState} from \"react\";\nimport { Link, useHistory} from 'react-router-dom';\nimport { login, register } from \"../api\";\n\nasync function loginUser(username, password, setToken, history){\n    try{\n        const result = await login(username, password);\n        if(result.success === false){\n            document.getElementById(\"errorMessage\").innerHTML = result.error.message;\n        }else{\n            const token = result.data.token;\n            setToken(token);\n            localStorage.setItem(\"token\", token);\n            history.push(\"/\");\n        }\n    }catch (error){\n        console.error(\"Error Logging in Users\", error)\n    }\n}\n\nasync function registerUser(username, password, confirmPassword, setToken, history){\n    if(confirmPassword === password){  \n        try{\n            const result = await register(username, password);\n            if(result.success === false){\n                document.getElementById(\"errorMessage\").innerHTML = result.error.message;\n            }else{\n                const token = result.data.token;\n                setToken(token);\n                localStorage.setItem(\"token\", token);\n                history.push(\"/\");\n            }\n        }catch (error){\n            console.error(\"Error Logging in Users\", error)\n        }\n    }else{\n        document.getElementById(\"errorMessage\").innerHTML = \"Passwords must match!\";\n    }     \n}\n\nconst LogIn = ({setToken , match}) => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const history = useHistory();\n\n    return(\n        <form className=\"m-3 w-50 position-absolute top-50 start-50 translate-middle\" \n            onSubmit={(event) => {\n                event.preventDefault();\n \n                if(match.url === \"/register\"){\n                    registerUser(username, password, confirmPassword, setToken, history);\n                }else {\n                    loginUser(username, password, setToken, history);\n                }\n            }}\n        >\n            <div className=\"mb-3\">\n                <label htmlFor=\"usernameInput\" className=\"form-label\">Username (min 5 Characters)</label>\n                <input type=\"text\" className=\"form-control\" id=\"usernameInput\" placeholder=\"Username...\" minLength=\"5\"\n                    onChange={({target: {value}}) => setUsername(value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"passwordInput\" className=\"form-label\">Password (min 5 Characters)</label>\n                <input type=\"password\" className=\"form-control\" id=\"passwordInput\" placeholder=\"Password...\" minLength=\"5\"\n                    onChange={({target: {value}}) => setPassword(value)}/>\n            </div>\n            {(match.url === \"/register\" ? \n                <div className=\"mb-3\">\n                    <label htmlFor=\"confirmPasswordInput\" className=\"form-label\">Confirm Password (min 5 Characters)</label>\n                    <div className=\"input-group has-validation\">\n                        <input type=\"password\" className=\"form-control\" id=\"confirmPasswordInput\" placeholder=\"Confirm Password...\" minLength=\"5\"\n                            onChange={\n                                ({target: {value}}) => {\n                                    setConfirmPassword(value)\n                                }\n                        }/>\n                    </div>\n                </div>\n            : null)}\n            <div id=\"errorMessage\" className=\"danger m-3\"> </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n            <div className=\"mb-3\">                \n                {(match.url === \"/register\" ?\n                    <Link to=\"/login\">Already a user? Login Here! </Link> \n                    :\n                    <Link to=\"/register\">Not a User? Register Here! </Link>\n                )}\n            </div>\n        </form>\n    )\n}\n\nexport default LogIn;","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { BASE_URL } from \"../constants\";\nimport { getPostWithIDForEdit } from \"../api\"\n\nasync function addPost(token, post, history){\n    fetch(`${BASE_URL}/posts`, {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n            post: post\n        })\n    }).then(response => response.json())\n    .then(result => {\n        if(result.success){\n            history.push(\"/posts\")\n        }\n    })\n    .catch(console.error);\n}\n\nasync function editPost(token, post, postId, history){\n    fetch(`${BASE_URL}/posts/${postId}`, {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n            post: post\n        })\n    }).then(response => response.json())\n    .then(result => {\n        if(result.success){\n            history.push(`/posts/post/${postId}`)\n        }\n    })\n    .catch(console.error);\n}\n\nconst AddEditPost = ({token, isAdd, match}) => {\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [willDeliver, setWillDeliver] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        if(match.params.postId){\n            getPostWithIDForEdit(token, match.params.postId, setTitle, setDescription, setPrice, setLocation, setWillDeliver);\n        }\n        \n    },[token,match.params.postId])\n\n    return (\n        <div id=\"addPost\" className=\"centered m-3\">\n            <h1> {(isAdd ? \"Add\" : \"Edit\")} Post</h1>\n            <form className=\"w-50\" \n            onSubmit={(event) => {\n                event.preventDefault();\n                const post = {\n                    title: title,\n                    description: description,\n                    price: price,\n                    location: location, \n                    willDeliver: willDeliver\n                }\n                if(isAdd){\n                    addPost(token, post, history);\n                }else{\n                    editPost(token, post, match.params.postId, history);\n                }\n                \n            }}> \n                <div className=\"mb-3\">\n                    <label htmlFor=\"titleInput\" className=\"form-label\">Title</label>\n                    <input type=\"text\" className=\"form-control\" id=\"titleInput\" placeholder=\"Title\" value={title}\n                    onChange={({target: {value}}) => setTitle(value)} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"descInput\" className=\"form-label\">Description</label>\n                    <input type=\"text\" className=\"form-control\" id=\"descInput\" placeholder=\"Description\" value={description}\n                    onChange={({target: {value}}) => setDescription(value)} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"priceInput\" className=\"form-label\">Price</label>\n                    <input type=\"text\" className=\"form-control\" id=\"priceInput\" placeholder=\"Price\"  value={price}\n                    onChange={({target: {value}}) => setPrice(value)} />\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"locationInput\" className=\"form-label\">Location</label>\n                    <input type=\"text\" className=\"form-control\" id=\"locationInput\" placeholder=\"Location\" value={location}\n                    onChange={({target: {value}}) => setLocation(value)} />\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"deliverCheckbox\" value={willDeliver}\n                    onChange={({target: {value}}) => setWillDeliver(!willDeliver)} />\n                    <label className=\"form-check-label\" htmlFor=\"deliverCheckbox\">\n                        Will Deliver\n                    </label>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">{(isAdd ? \"Submit\" : \"Save\")}</button>\n            </form>\n        </div>)\n}\n\nexport default AddEditPost;","import React, { useEffect, useState } from \"react\";\nimport { getPostWithID, deletePostWithID } from \"../api\";\n\nasync function deletePost(postID, token, history){\n    await deletePostWithID(token, postID)\n    history.push(\"/posts\");\n}\n\nconst Post = ({token, history, match}) => {\n    const [post, setPost] = useState({})\n    \n    useEffect(() => {\n        getPostWithID(token, match.params.postId, setPost);\n    },[token,match.params.postId])\n\n    if(post._id){\n        return (\n            <div className=\"centered\">\n                <div className=\"card w-75 p-3 border-dark m-3 shadow bg-body rounded\">\n                    <div className=\"card-header bg-primary text-white\">\n                        {post.title}\n                    </div>\n                    <ul className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">Description: {post.description}</li>\n                        <li className=\"list-group-item\">Author: {post.author.username}</li>\n                        <li className=\"list-group-item\">Location: {post.location}</li>\n                        <li className=\"list-group-item\">Price: {post.price}</li>\n                        {post.willDeliver ? <li className=\"list-group-item\">Will Deliver</li> : <li className=\"list-group-item\">Will NOT Deliver</li>}\n                        <div className=\"horizGroup\">\n                            <button type=\"button\" className=\"btn btn-outline-primary w-25 m-3\" \n                                onClick={() => {\n                                    history.push(`/posts/post/edit/${post._id}`);\n                                }}>Edit Post</button>\n                            <button type=\"button\" className=\"btn btn-outline-danger w-25 m-3\" onClick={() => {deletePost(post._id,token, history)}}>Delete</button>\n                        </div>\n                    </ul>\n                </div>\n                <div id=\"messages\" className=\"centered w-100\">\n                    <h2>Messages Pertaining to this Post</h2>\n                    {\n                        post.messages.map((message, index) => {\n                            return (\n                                <div key={index} className=\"card w-75 p-3 border-dark m-3 shadow bg-body rounded\">\n                                    <ul className=\"list-group list-group-flush\">\n                                        <li className=\"list-group-item\"><h3>Post: {message.post.title}</h3></li>\n                                        <li className=\"list-group-item\">From: {message.fromUser.username}</li>\n                                        <li className=\"list-group-item\">Message: {message.content}</li>\n                                    </ul>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }else{\n        return null\n    }\n}\n\nexport default Post;","import React, { useState , useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter , Route } from 'react-router-dom';\nimport { getUser } from './api';\n\nimport {\n    AddEditPost,\n    Home,\n    LogIn,\n    NavBar, Posts, Profile, Post\n} from \"./components\"\nconst App = () => {\n    const [token, setToken] = useState(\"\");\n    const [user, setUser] = useState({\n        username: \"\"\n    });\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\");\n        if(token){\n            setToken(token);\n            getUser(token, setUser);\n        }\n    }, [])\n\n    return (\n        <div className=\"app\">\n            <BrowserRouter>\n                <NavBar token={token} setToken={setToken}/>\n                <Route exact path=\"/\" render={() => <Home token={token} user={user} />} />\n                <Route exact path=\"/posts\" render={() => <Posts token={token} user={user} />}/>\n                <Route exact path=\"/posts/add\" render={(routeProps) => <AddEditPost token={token} user={user} isAdd={true} {...routeProps}/>}  />\n                <Route path=\"/posts/post/:postId\" render={(routeProps) => <Post token={token} user={user} {...routeProps} />}/>\n                <Route path=\"/posts/post/edit/:postId\" render={(routeProps) => <AddEditPost token={token} user={user} isAdd={false} {...routeProps}/>}  />\n                <Route path=\"/profile\" render={(routeProps) => <Profile token={token} {...routeProps} />} />\n                <Route path=\"/login\" render={(routeProps) => <LogIn setToken={setToken} setUser={setUser} {...routeProps}/>}  />\n                <Route path=\"/register\" render={(routeProps) => <LogIn setToken={setToken} setUser={setUser} {...routeProps}/>}  />\n            </BrowserRouter>\n        </div>\n    )\n}\n\nReactDOM.render(<App/>, document.getElementById('app'));"],"sourceRoot":""}